---
import { portfolioPDF } from "../lib/api";
const data = await portfolioPDF();
---

<nav>
	<label class="hamburger-menu">
		<input type="checkbox" />
	</label>
	<ul class="navbar">
		<li>
			<a href="/"
				>{import.meta.env.PUBLIC_FIRSTNAME_AND_LASTNAME.toUpperCase()}</a
			>
		</li>
		<li><a href="/bio">BIO</a></li>
		<li><a href="/sculpture"><p>SCULPTURE</p></a></li>
		<li><a href="/painting">PAINTING</a></li>
		<li><a href="/music">MUSIC</a></li>

		<li class="dropdown">
			<a class="mixmedia-link"
				>MIXMEDIA<span class="down-arrow">&#160;&#8595;</span></a
			>
			<ul class="dropdown_menu">
				<li>
					<a class="mixmedia-innerlink" href="/mixmedia_others">Others</a>
				</li>
				<li>
					<a class="mixmedia-innerlink" href="/mixmedia_collages">Collages</a>
				</li>
			</ul>
		</li>

		<li>
			<a href={data.page.pdfLink.portfolioPDF_link} target="_blank"
				>PORTFOLIO PDF</a
			>
		</li>
	</ul>
</nav>

<style lang="scss">
	// VARIABLES
	$mobile-desktop-breakpoint: 1160px;
	// ANIMATIONS
	@keyframes growUp {
		0% {
			transform: scaleY(1);
		}

		100% {
			transform: scaleY(0);
		}
	}

	@keyframes growDown {
		0% {
			transform: scaleY(0);
		}

		100% {
			transform: scaleY(1);
		}
	}

	// GENERAL STYLES
	@mixin navbar {
		// NAVBAR GENERAL STYLES
		* {
			margin: 0;
			padding: 0;
		}

		nav {
			position: fixed;
			top: 0px;
			width: 100%;
			height: 72px;
			background-color: white;
			z-index: 10;
		}

		ul {
			list-style: none;
			background-color: white;
		}

		// separate name and surname from rest of navigation
		li:first-child {
			margin-right: 104px;
			// unnecessary in mobile view
			@media screen and (max-width: $mobile-desktop-breakpoint) {
				margin-right: 0;
			}
		}

		li {
			display: inline-block;
			position: relative;
			background-color: white;

			// column view on mobile
			@media screen and (max-width: $mobile-desktop-breakpoint) {
				display: block;
			}
		}
		a {
			display: block;
			color: black;

			padding: 25px 25px;
			text-decoration: none;
			text-align: center;

			// don't gray out mixmedia link on hover
			&:hover:not(.mixmedia-link) {
				opacity: 0.5;
			}
		}
		// NAVBAR GENERAL END
	}
	@include navbar;

	// DROPDOWN
	@mixin dropdown {
		// DROPDOWN
		.dropdown_menu {
			position: absolute;
			top: 100%;
			left: 0;
			width: 100%;
			display: none;
			animation: growDown 300ms ease-in-out forwards;
			transform-origin: top center;
		}
		.dropdown:hover .dropdown_menu {
			display: block;
		}
		.mixmedia-link {
			cursor: pointer;
		}
		// DROPDOWN MOBILE

		@media screen and (max-width: $mobile-desktop-breakpoint) {
			.dropdown_menu {
				display: block;
				position: static;
				animation: none;
			}
			.mixmedia-link {
				padding-bottom: 5px;
			}

			.down-arrow {
				display: none;
			}

			.mixmedia-innerlink {
				padding: 0;
			}
		}
		// DROPDOWN END
	}
	@include dropdown;

	// HAMBUERGER
	@mixin hamburger-menu {
		// HAMBUERGER BUTTON
		:root {
			--bar-width: 30px;
			--bar-height: 2.25px;
			--hamburger-gap: 7.425px;
			--hamburger-margin: 25px;
			--animation-timing: 200ms ease-in-out;
			--hamburger-height: calc(
				var(--bar-height) * 3 + var(--hamburger-gap) * 2
			);
		}

		.hamburger-menu {
			--x-width: calc(var(--hamburger-height) * 1.41421356237);

			display: flex;
			flex-direction: column;
			gap: var(--hamburger-gap);
			width: max-content;
			position: absolute;
			top: var(--hamburger-margin);
			right: var(--hamburger-margin);
			z-index: 2;
			cursor: pointer;

			@media screen and (min-width: $mobile-desktop-breakpoint) {
				display: none;
			}
		}

		.hamburger-menu:has(input:focus-visible)::before,
		.hamburger-menu:has(input:focus-visible)::after,
		.hamburger-menu input:focus-visible {
			box-shadow: 0 0 0 1px black;
		}

		.hamburger-menu::before,
		.hamburger-menu::after,
		.hamburger-menu input {
			content: "";
			width: var(--bar-width);
			height: var(--bar-height);
			background-color: black;
			border-radius: 9999px;
			transform-origin: left center;
			transition:
				opacity var(--animation-timing),
				width var(--animation-timing),
				rotate var(--animation-timing),
				translate var(--animation-timing),
				background-color var(--animation-timing);
		}

		.hamburger-menu input {
			appearance: none;
			padding: 0;
			margin: 0;
			outline: none;
			pointer-events: none;
		}

		.hamburger-menu:has(input:checked)::before {
			rotate: 45deg;
			width: var(--x-width);
			translate: 0 calc(var(--bar-height) / -2);
		}

		.hamburger-menu:has(input:checked)::after {
			rotate: -45deg;
			width: var(--x-width);
			translate: 0 calc(var(--bar-height) / 2);
		}

		.hamburger-menu input:checked {
			opacity: 0;
			width: 0;
		}

		// toggle nav buttons
		@media screen and (max-width: $mobile-desktop-breakpoint) {
			.hamburger-menu:has(input:checked) + ul {
				display: block;
				animation: growDown 300ms ease-in-out forwards;
				transform-origin: top center;
			}
			.hamburger-menu:has(input:not(:checked)) + ul {
				animation: growUp 300ms ease-in-out forwards;
				transform-origin: top center;
			}
		}
		// HAMBURGER BUTTON END STYLE
	}
	@include hamburger-menu;
</style>
